name: Direct File Deploy (No Git)

on:
  workflow_dispatch:

jobs:
  direct-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Direct File Download and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          timeout: 600s
          command_timeout: 10m
          debug: true
          script: |
            powershell -Command "
            `$ErrorActionPreference = 'Stop'
            Write-Host '═══════════════════════════════════════════' -ForegroundColor Cyan
            Write-Host 'DIRECT FILE DOWNLOAD - NO GIT' -ForegroundColor Cyan
            Write-Host '═══════════════════════════════════════════' -ForegroundColor Cyan
            
            # Stop Python
            Write-Host ''
            Write-Host 'Stopping Python...'
            Get-Process python -ErrorAction SilentlyContinue | Stop-Process -Force
            Start-Sleep -Seconds 5
            Write-Host '✅ Done'
            
            # Prepare directory
            Write-Host ''
            Write-Host 'Preparing C:\fidus_mt5_bridge...'
            `$dir = 'C:\fidus_mt5_bridge'
            if (-not (Test-Path `$dir)) {
                New-Item -ItemType Directory -Path `$dir -Force | Out-Null
            }
            Write-Host '✅ Done'
            
            # Download file
            Write-Host ''
            Write-Host 'Downloading from GitHub...'
            `$url = 'https://raw.githubusercontent.com/chavapalmarubin-lab/FIDUS/main/vps/mt5_bridge_api_service.py'
            `$file = \"`$dir\mt5_bridge_api_service.py\"
            Write-Host '  URL:' `$url
            
            try {
                `$ProgressPreference = 'SilentlyContinue'
                Invoke-WebRequest -Uri `$url -OutFile `$file -TimeoutSec 30
                Write-Host '✅ Downloaded'
            } catch {
                Write-Host 'Trying curl...'
                cd `$dir
                curl -L -o mt5_bridge_api_service.py `$url
                if (`$LASTEXITCODE -ne 0) { Write-Host '❌ Failed'; Exit 1 }
                Write-Host '✅ Downloaded via curl'
            }
            
            # Verify
            Write-Host ''
            Write-Host 'Verifying file...'
            if (-not (Test-Path `$file)) { Write-Host '❌ Not found'; Exit 1 }
            `$size = (Get-Item `$file).Length
            Write-Host '  Size:' `$size 'bytes'
            if (`$size -lt 1000) { Write-Host '❌ Too small'; Exit 1 }
            
            `$content = Get-Content `$file -Raw
            if (`$content -notmatch '/api/mt5/bridge/health') { Write-Host '❌ Missing routes'; Exit 1 }
            if (`$content -notmatch 'FIDUS MT5 Bridge API') { Write-Host '❌ Wrong service name'; Exit 1 }
            Write-Host '✅ File verified'
            
            # Copy .env
            Write-Host ''
            Write-Host 'Copying .env...'
            if ((Test-Path 'C:\mt5_bridge_service\.env') -and -not (Test-Path \"`$dir\.env\")) {
                Copy-Item 'C:\mt5_bridge_service\.env' \"`$dir\.env\" -Force
                Write-Host '✅ .env copied'
            } else {
                Write-Host '  No .env to copy'
            }
            
            # Start
            Write-Host ''
            Write-Host 'Starting service...'
            cd `$dir
            if (-not (Test-Path 'logs')) { New-Item -ItemType Directory -Path 'logs' -Force | Out-Null }
            Start-Process python -ArgumentList 'mt5_bridge_api_service.py' -RedirectStandardOutput 'logs\service.log' -RedirectStandardError 'logs\error.log' -WindowStyle Hidden
            Start-Sleep -Seconds 20
            Write-Host '✅ Started'
            
            # Verify
            Write-Host ''
            Write-Host 'Testing endpoints...'
            try {
                `$r = Invoke-RestMethod 'http://localhost:8000/' -TimeoutSec 10
                Write-Host '  Service:' `$r.service
                if (`$r.service -ne 'FIDUS MT5 Bridge API') {
                    Write-Host '❌ Wrong service!'
                    Exit 1
                }
                
                Invoke-RestMethod 'http://localhost:8000/api/mt5/bridge/health' -TimeoutSec 10 | Out-Null
                Write-Host '  ✅ Bridge health OK'
                
                Write-Host ''
                Write-Host '✅✅✅ SUCCESS! ✅✅✅' -ForegroundColor Green
                Write-Host 'Direct download method worked!'
            } catch {
                Write-Host '❌ Verification failed'
                Get-Content 'logs\service.log' -Tail 30 -ErrorAction SilentlyContinue
                Get-Content 'logs\error.log' -Tail 30 -ErrorAction SilentlyContinue
                Exit 1
            }
            "

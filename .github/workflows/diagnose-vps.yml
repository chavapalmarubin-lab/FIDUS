name: Diagnose VPS (Nuclear Reset Enabled)

on:
  workflow_dispatch:

jobs:
  nuclear-reset:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Nuclear Reset MT5 Bridge
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          timeout: 600s
          command_timeout: 15m
          debug: true
          script: |
            powershell -Command "
            `$ErrorActionPreference = 'Stop'
            Write-Host '═══════════════════════════════════════════' -ForegroundColor Cyan
            Write-Host 'NUCLEAR RESET - MT5 BRIDGE' -ForegroundColor Cyan
            Write-Host '═══════════════════════════════════════════' -ForegroundColor Cyan
            
            # Stop Python
            Write-Host ''
            Write-Host 'Stopping Python processes...'
            Get-Process python -ErrorAction SilentlyContinue | Stop-Process -Force
            Start-Sleep -Seconds 5
            Write-Host '✅ Done'
            
            # Backup
            Write-Host ''
            Write-Host 'Backing up old directory...'
            if (Test-Path 'C:\mt5_bridge_service') {
                `$backup = 'C:\mt5_bridge_service_backup_' + (Get-Date -Format 'yyyyMMddHHmmss')
                Move-Item -Path 'C:\mt5_bridge_service' -Destination `$backup -Force -ErrorAction SilentlyContinue
                Write-Host '✅ Backed up to' `$backup
            }
            
            # Clone
            Write-Host ''
            Write-Host 'Cloning fresh repository...'
            cd C:\
            git clone https://github.com/chavapalmarubin-lab/FIDUS.git mt5_bridge_service
            if (`$LASTEXITCODE -ne 0) { Write-Host '❌ Clone failed'; Exit 1 }
            Write-Host '✅ Clone complete'
            
            # Verify
            Write-Host ''
            Write-Host 'Verifying repository...'
            cd C:\mt5_bridge_service
            if (-not (Test-Path 'vps\mt5_bridge_api_service.py')) {
                Write-Host '❌ File not found!'
                Get-ChildItem vps
                Exit 1
            }
            Write-Host '✅ File verified'
            
            # Deploy
            Write-Host ''
            Write-Host 'Deploying service file...'
            Copy-Item -Path 'vps\mt5_bridge_api_service.py' -Destination 'mt5_bridge_api_service.py' -Force
            `$content = Get-Content 'mt5_bridge_api_service.py' -Raw
            if (`$content -notmatch '/api/mt5/bridge/health') {
                Write-Host '❌ Wrong file content!'
                Exit 1
            }
            Write-Host '✅ File deployed and verified'
            
            # Remove wrong files
            Write-Host ''
            Write-Host 'Removing wrong files...'
            Remove-Item -Path 'main.py' -Force -ErrorAction SilentlyContinue
            Remove-Item -Path 'main_production.py' -Force -ErrorAction SilentlyContinue
            Write-Host '✅ Done'
            
            # Start
            Write-Host ''
            Write-Host 'Starting service...'
            if (-not (Test-Path 'logs')) { New-Item -ItemType Directory -Path 'logs' -Force | Out-Null }
            Start-Process -FilePath 'python' -ArgumentList 'mt5_bridge_api_service.py' -RedirectStandardOutput 'logs\nuclear.log' -RedirectStandardError 'logs\nuclear_error.log' -WindowStyle Hidden
            Start-Sleep -Seconds 20
            Write-Host '✅ Service started'
            
            # Verify
            Write-Host ''
            Write-Host 'Verifying endpoints...'
            try {
                `$r = Invoke-RestMethod -Uri 'http://localhost:8000/' -TimeoutSec 10
                Write-Host '  Service name:' `$r.service
                if (`$r.service -ne 'FIDUS MT5 Bridge API') {
                    Write-Host '❌ Wrong service name!'
                    Exit 1
                }
                Write-Host '  ✅ Correct service'
                
                Invoke-RestMethod -Uri 'http://localhost:8000/api/mt5/bridge/health' -TimeoutSec 10 | Out-Null
                Write-Host '  ✅ Bridge health endpoint working'
                
                Invoke-RestMethod -Uri 'http://localhost:8000/api/mt5/account/886557/info' -TimeoutSec 10 | Out-Null
                Write-Host '  ✅ Account info endpoint working'
                
                Write-Host ''
                Write-Host '═══════════════════════════════════════════' -ForegroundColor Cyan
                Write-Host '✅✅✅ NUCLEAR RESET SUCCESSFUL! ✅✅✅' -ForegroundColor Green
                Write-Host '═══════════════════════════════════════════' -ForegroundColor Cyan
            } catch {
                Write-Host '❌ Verification failed:' `$_.Exception.Message
                Write-Host ''
                Write-Host 'Logs:'
                Get-Content 'logs\nuclear.log' -Tail 30 -ErrorAction SilentlyContinue
                Get-Content 'logs\nuclear_error.log' -Tail 30 -ErrorAction SilentlyContinue
                Exit 1
            }
            "

<analysis>
The previous AI engineer successfully completed a challenging VPS migration, addressing 404 errors, GitHub authentication, and a critical MongoDB cluster name typo. The infrastructure shifted from  to . The core challenge now is to fully implement the MT5 Auto-Healing System.

The AI engineer developed the MT5 Watchdog service, a GitHub emergency deployment workflow, and email alerts. However, during testing, several issues arose: the  was accidentally committed, blocking Git pushes, which required token sanitization and explicit instructions for secure storage (Render.com environment variables). A major persistent blocker is the deployment of the *correct, updated*  to the Windows VPS. Despite multiple manual restarts and file copy attempts by the user, the VPS continues to run an older code version, lacking the new auto-healing and one-time setup endpoints. The AI identified that the workflow was targeting the wrong port (5000 instead of 8000) and that the VPS environment is standalone, requiring manual code updates. The current task is to provide a clean, copy-pastable version of the Python file for the user to manually deploy to the VPS, as previous attempts resulted in syntax errors.
</analysis>

<product_requirements>
The FIDUS platform is an investment management system managing seven MT5 accounts, requiring robust MT5 data integration, broker rebate calculations, and performance analytics. It comprises a Python/FastAPI backend, React.js frontend, and an MT5 Bridge on a Windows VPS.

The project began with a critical migration from a problematic old VPS () to a stable new one (). This involved updating all backend, frontend, and GitHub Actions references to the new VPS, ensuring MongoDB connectivity, and deprecating old references.

The immediate post-migration goal is to implement a high-priority MT5 Auto-Healing System. This system requires:
1.  **MT5 Watchdog Service**: To monitor MT5 Bridge health (API availability, data freshness, account sync) every 60 seconds, with auto-healing after 3 consecutive failures.
2.  **GitHub Emergency Deployment Workflow**: To trigger service restarts on the VPS via API when issues are detected.
3.  **Enhanced Email Alerts**: To notify users of recovery success or critical failures requiring manual intervention.
Additionally, documentation within the app, removal of all old VPS references, and verification of frontend deployment are required.
</product_requirements>

<key_technical_concepts>
-   **Backend**: Python (FastAPI, PyMongo, APScheduler, httpx), MongoDB for data persistence.
-   **Frontend**: React.js for user interface.
-   **Deployment/Orchestration**: GitHub Actions (PowerShell, SSH), Render.com, Windows Task Scheduler, Supervisor.
-   **Architectural Principles**: API Gateway/Proxy, Auto-healing, Health Monitoring.
-   **VPS Specifics**: Windows Server, MT5 Terminal, manual file deployment for critical updates.
</key_technical_concepts>

<code_architecture>
The application features a React.js frontend, a Python/FastAPI backend, and a Windows VPS hosting the MT5 Bridge, managed with GitHub Actions.



-   ****: Main FastAPI application. Initializes the  service.
-   ****: Monitors MT5 Bridge health and initiates auto-healing. Its configuration now correctly references the new VPS.
-   ****: Updated  to .  and  are managed securely via Render.com/GitHub Secrets.
-   ****: The core FastAPI service intended for the Windows VPS. This file was modified to include the  endpoint and a temporary  endpoint. *Currently, the VPS is reported to be running an old version of this file, missing these new endpoints.*
-   ****: Existing GitHub Actions workflow for emergency deployment, which was to be updated for the new VPS.
-   ****: New GitHub Actions workflow created for the Hybrid auto-healing approach, which triggers the  endpoint on the VPS.
-   ****: New GitHub Actions workflow created to remotely configure  on the VPS via the  endpoint.
-   ****: Frontend component updated to include a new MT5 Auto-Healing System tab and generally sanitized from old VPS references.
-   ****: New documentation files created for infrastructure, troubleshooting, VPS migration history, and MT5 auto-healing.
-   ****: Updated to reflect the new VPS IP and current infrastructure status.
</code_architecture>

<pending_tasks>
-   Complete the automated execution of the auto-healing system (after new code is deployed to VPS).
-   Remove the temporary  endpoint from  for security.
-   Verify all documentation updates are correctly rendered in the frontend.
-   Remove any remaining old VPS references () from the codebase, especially historical or log files.
-   Perform Kubernetes cleanup (remove  from MongoDB Atlas network access if unused).
</pending_tasks>

<current_work>
Immediately prior to this summary, the AI engineer was focused on resolving a critical deployment blocker for the MT5 Auto-Healing System. Despite successfully integrating the auto-healing logic into the  and creating associated GitHub Actions workflows (, ), the updated  file, containing the necessary  and  endpoints, was consistently failing to deploy to the Windows VPS ().

The AI diagnosed that the VPS was still running an old version of the code, as calls to the new endpoints resulted in 404 Not Found errors, even after the user performed manual restarts and confirmed service running. The user had also encountered syntax errors during previous manual copy-paste attempts of the file content. The AI determined that manual intervention by the user to update the file on the VPS was unavoidable.

The current immediate task is to provide the user with a completely clean, copy-pastable version of the  file, ensuring no syntax errors or hidden characters, to finally get the new endpoints deployed on the VPS. This is in direct response to the user's latest message, there is something wrong in line 2. please i need the file that i can simply copy and paste.
</current_work>

<optional_next_step>
Provide the user with a clean, copy-pastable  file content to fix the syntax error on line 2 and enable manual deployment.
</optional_next_step>

